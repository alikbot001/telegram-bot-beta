import { Low } from 'lowdb'
import { JSONFile } from 'lowdb/node'
import { Telegraf, Markup } from 'telegraf';
import schedule from 'node-schedule';
import dayjs from 'dayjs';

// --- Настройка lowdb ---
const adapter = new JSONFile('db.json');
const db = new Low(adapter);

async function initDB() {
    await db.read();
    if (!db.data) db.data = { users: {} };
    await db.write();
}

// --- Ваш токен ---
const BOT_TOKEN = "7804238972:AAFfnqmnuRKYFM3CzvJ-Es9j1ucQWCej3Uw";

// --- Мотивационные цитаты (пример) ---
const MOTIVATION_QUOTES = [
    "Делай сегодня то, что другие не хотят — завтра будешь жить так, как другие не могут. — Джерри Райс",
    "Просыпайся с мыслью, что нужно изменить чью-то жизнь. Хотя бы свою. — Рой Беннет",
    "Если не сейчас, то когда? — Эмма Гольдман",
    "Не жди вдохновения — приди и возьми его. — Чак Паланик",
    "Сделай шаг, и дорога появится сама. — Джон Локк",
    "Успех — это 10% удачи и 90% потения. — Томас Эдисон",
    "Ты не сможешь изменить свою жизнь, пока не изменишь то, что делаешь каждый день. — Джон Максвелл",
    "Лучший способ начать — перестать говорить и начать делать. — Уолт Дисней",
    "Если тебе тяжело — значит, ты растешь. — Джим Рон",
    "Мечты не работают, пока не работаешь ты. — Стивен Кови",
    "Каждый день — это чистый лист. Что ты на нем напишешь? — Брюс Ли",
    "Мотивация заканчивается — привычка остается. — Зиг Зиглар",
    "Не откладывай свою жизнь на потом. «Потом» — это ловушка. — Леонардо да Винчи",
    "Если не веришь в себя, найди того, кто верит, и докажи ему правоту. — Генри Форд",
    "Работай молча. Пусть успех будет твоим шумом. — Фрэнк Оушен",
    "Сложное становится простым, когда ты начинаешь действовать. — Конфуций",
    "Ты либо находишь путь, либо создаешь его. — Наполеон Бонапарт",
    "Не бойся делать то, что не умеешь. Ковчег построил любитель, «Титаник» — профессионалы. — Дэйв Бервис",
    "Дисциплина — это мост между целями и достижениями. — Джим Рон",
    "Скорость не важна — важно движение. — Далай-лама",
    "Не жди идеальных условий — создавай их. — Джордж Бернард Шоу",
    "Если ты не готов рискнуть обычным, придется довольствоваться заурядным. — Джим Рон",
    "«Завтра» — самое опасное слово в словаре успеха. — Грант Кардон",
    "Не говори «у меня нет времени». У тебя ровно столько же часов в сутках, сколько у Бейонсе. — Кэтрин Хепберн",
    "Трудное — временно, результат — вечен. — Альберт Эйнштейн",
    "Если ты не управляешь своим днем, им управляет кто-то другой. — Джим Кэткарт",
    "Сделай хотя бы что-то сегодня — твое будущее «я» скажет тебе спасибо. — Неизвестный",
    "Боль сгорает в огне действия. — Дэн Кеннеди",
    "Ты не проиграл, пока не отказался от попыток. — Майкл Джордан",
    "Не ищи часы — создавай их. — Пабло Пикассо",
    "Действие — это фундаментальная сила успеха. — Тони Роббинс",
    "Лень — это привычка отдыхать до того, как устанешь. — Жюль Ренар",
    "Страх исчезает, когда начинается действие. — Уильям Джеймс",
    "Не жди, пока закончится шторм — учись танцевать под дождем. — Вивиан Грин",
    "Ты можешь ждать годами «подходящего момента» или создать его за 5 минут. — Гэри Вайнерчук",
    "Никто не поднимется на вершину, таская за собой камни оправданий. — Брюс Ли",
    "Если тебе не нравится дорога, по которой идешь, начни прокладывать другую. — Долли Партон",
    "Продуктивность — это не случайность. Это выбор. — Стивен Кови",
    "Секрет успеха — начать, пока другие откладывают. — Марк Твен",
    "Ты не обязан быть великим, чтобы начать, но должен начать, чтобы стать великим. — Зиг Зиглар",
    "Не смотри на часы — делай то, что они делают: иди вперед. — Сэм Левенсон",
    "Работай, пока другие спят. Учись, пока другие развлекаются. Готовься, пока другие играют. Мечтай, пока другие желают. — Уильям Артур Уорд",
    "Если ты не готов измениться — не жди изменений. — Джим Рон",
    "Сделай первый шаг — ты не увидишь всю лестницу, просто начни. — Мартин Лютер Кинг",
    "Будущее создается сегодня, а не завтра. — Пауло Коэльо",
    "Не жди мотивации — создавай ее. — Грант Кардон",
    "Ты не поднимаешься до уровня своих целей — падаешь до уровня своих действий. — Джеймс Клир",
    "Каждый раз, когда ты говоришь «потом», твои мечты уменьшаются. — Неизвестный",
    "Действие — это лекарство от страха. — Дэвид Дж. Шварц",
    "Если не ты, то кто? Если не сейчас, то когда? — Хиллель Старший",
    "Твой мозг — инструмент. Научись им пользоваться, или он будет использовать тебя. — Джим Квик",
    "Самый долгий путь начинается с одного шага. Сделай его. — Лао-Цзы",
    // Рокки
    "Мир не будет сиять тебе в лицо только потому, что ты добрый парень. Умей бить! (Рокки Бальбоа, «Рокки»)",
    "Не важно, как сильно ты ударишь. Важно, как сильно тебя ударят — и ты сможешь продолжать идти. («Рокки»)",
    "Если ты знаешь, чего стоишь, иди и возьми это! Но будь готов получать удары. («Рокки»)",
    // Бойцовский клуб
    "Ты — не твоя работа. Не твои деньги на счету. Не твоя машина. Ты — не твоё дерьмовое хаки. (Тайлер Дёрден, «Бойцовский клуб»)",
    "По-настоящему свободен лишь тот, кто потерял всё. («Бойцовский клуб»)",
    "Без жертв и боли ты не станешь тем, кем хочешь быть. («Бойцовский клуб»)",
    // Волк с Уолл-стрит
    "Единственная вещь, стоящая между тобой и твоей целью — это та херня, которую ты сам себе рассказываешь. (Джордан Белфорт, «Волк с Уолл-стрит»)",
    "Будь голодным. Оставайся голодным. («Волк с Уолл-стрит»)",
    // Гладиатор
    "Что мы делаем в жизни? Эхо наших поступков звучит в вечности! (Максимус, «Гладиатор»)",
    "Смерть улыбается всем. Люди могут лишь улыбнуться ей в ответ. («Гладиатор»)",
    // Начало
    "Ты должен поверить, что тебя ждёт успех. Ты уже на краю, но единственный способ проиграть — перестать пытаться. (Кобб, «Начало»)",
    // Форрест Гамп
    "Жизнь — как коробка конфет. Никогда не знаешь, что тебе попадётся. (Форрест Гамп, «Форрест Гамп»)",
    "Беги, Форрест, беги! («Форрест Гамп»)",
    // Тёмный рыцарь
    "Зачем мы падаем? Чтобы научиться подниматься. (Альфред, «Тёмный рыцарь»)",
    "Ты либо умираешь героем, либо живёшь так долго, что становишься злодеем. (Харви Дент, «Тёмный рыцарь»)",
    // Общество мёртвых поэтов
    "Carpe diem! Лови момент, мальчики! Делайте свою жизнь необыкновенной! (Джон Китинг, «Общество мёртвых поэтов»)",
    // Крёстный отец
    "Держи друзей близко, а врагов ещё ближе. (Майкл Корлеоне, «Крёстный отец»)",
    "Большая власть приходит с большой ответственностью. («Крёстный отец»)",
    // Бегущий по лезвию
    "Я видел такое, во что вы, люди, не поверите… (Рой Батти, «Бегущий по лезвию»)",
    "Время умирать. (Рой Батти, «Бегущий по лезвию»)"
];

// Мотивирующие цитаты для работы над собой и своей жизнью
MOTIVATION_QUOTES.push(
    "Победа — это не случайность. Это ежедневный труд, дисциплина и любовь к тому, что ты делаешь. — Пеле",
    "Ты не становишься лучше в один день — ты становишься лучше каждый день. — Джордан Белфорт",
    "Если ты не готов работать над собой, зачем ждать, что жизнь изменится? — Джим Рон",
    "Самый сложный соперник — не другие, а ты вчерашний. — Брюс Ли",
    "Если тебе легко — значит, ты не растешь. — Арнольд Шварценеггер",
    "Боль — это временно. Гордость за себя — навсегда.",
    "Ты — автор своей жизни. Не жди, пока кто-то напишет за тебя. — Джордж Бернард Шоу",
    "Не ищи виноватых. Ищи решения. — Генри Форд",
    "Жизнь — это 10% того, что с тобой происходит, и 90% того, как ты на это реагируешь. — Чарльз Свиндолл",
    "Если тебе не нравится твоя жизнь — измени её. Ты не дерево. — Джим Рон",
    "Страх — это индикатор. Если боишься — значит, это важно. — Тони Роббинс",
    "Лучшее время посадить дерево было 20 лет назад. Следующий лучший момент — сейчас. — Китайская пословица",
    "Ты не можешь вырастить дерево за день, но можешь посадить семя сегодня. — Джеймс Клир",
    "Успех — это сумма небольших усилий, повторяемых изо дня в день. — Роберт Колльер",
    "Инвестируй в себя. Это единственное вложение, которое точно окупится. — Уоррен Баффет",
    "Если не ты, то кто? Если не сейчас, то когда? — Хиллель Старший",
    "Мечты не работают, пока не работаешь ты. — Стивен Кови",
    "Не жди идеального момента. Возьми этот момент и сделай его идеальным.",
    "Мы — это то, что мы делаем постоянно. — Аристотель",
    "Сначала ты формируешь привычки, потом привычки формируют тебя. — Джон Драйден",
    "Маленькие ежедневные улучшения приводят к огромным результатам. — Робин Шарма",
    "Страх убивает мечты быстрее, чем неудачи. — Эрик Томас",
    "Делай то, что боишься делать, и страх умрет. — Ральф Уолдо Эмерсон",
    "Если не попробуешь — уже проиграл.",
    "Ты сильнее, чем думаешь. Достаточно просто начать.",
    "Никто не придет спасать тебя. Ты сам себе герой.",
    "Сила не в том, чтобы никогда не падать, а в том, чтобы подниматься каждый раз.",
    "Не ищи смысл жизни — создавай его. — Жан-Поль Сартр",
    "Живи так, чтобы твоя биография стоила того, чтобы её прочитать. — Джим Рон",
    "Ты рожден не для того, чтобы быть серым, обычным, незаметным. Ты рожден, чтобы сиять."
);

// --- Чеклисты по дням недели ---
const WEEKLY_CHECKLIST = [
    {
        title: "ПОНЕДЕЛЬНИК — Психология влияния (~60 мин)",
        tasks: [
            "Смотреть видео/лекцию о манипуляциях (30 мин)",
            "Подумать: где я с этим сталкивался? (10 мин)",
            "Записать: в чём я умею влиять? (10 мин)",
            "Медитация или дыхание (по желанию, 5 мин)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "ВТОРНИК — Финансовое мышление (~60–75 мин)",
        tasks: [
            "Смотреть видео / читать статью про мышление богатства (30 мин)",
            "Ответить письменно: как бы я потратил 10.000₽? (15 мин)",
            "Подумать: что я делаю правильно с деньгами? (5 мин)",
            "Чек-ин: как я себя чувствую сейчас? (5 мин)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "СРЕДА — Уверенность и речь (~60 мин)",
        tasks: [
            "Смотреть TED / выступление с харизмой (20 мин)",
            "Записать себя: как прошли 3 дня (2 мин)",
            "Проанализировать: что звучало уверенно? (10 мин)",
            "Выучить 5 сильных слов",
            "Проговорить: «Что я думаю о себе» (5 мин)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "ЧЕТВЕРГ — Кодинг / логика (~60–75 мин)",
        tasks: [
            "Пройти мини-урок по Python / визуальному кодингу (30 мин)",
            "Записать, что понял (10 мин)",
            "Подумать: что бы хотел создать? (10 мин)",
            "Прогулка или чай (отдых)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "ПЯТНИЦА — Спокойствие и самоанализ (~60 мин)",
        tasks: [
            "Медитация под эмбиент / тихая музыка (10 мин)",
            "Написать: — что почувствовал? — где был честен с собой? — где осудил себя — и зачем?",
            "Прогулка или отдых в тишине (15 мин)",
            "Музыка, которая лечит (15 мин)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "СУББОТА — Эстетика и вкус (~60–75 мин)",
        tasks: [
            "Смотреть красивое видео / монтаж / дизайн (15 мин)",
            "Подумать: что именно понравилось? (10 мин)",
            "Сохранить 3 идеи (в Telegram/папку)",
            "Придумать 1 идею для TikTok/канала",
            "Писать как хочется (ручкой / в заметках)",
            "Читать книгу (20 мин)"
        ]
    },
    {
        title: "ВОСКРЕСЕНЬЕ — Рефлексия и перезагрузка (~60 мин)",
        tasks: [
            "Написать: — что я понял о себе за неделю? — что получилось, что было трудно?",
            "Письмо себе: — «Я горжусь…» — «Я стараюсь…» — «Я прощаю себе…»",
            "Обновить планы / решить: «Завтра начну с простого»",
            "Читать книгу (20 мин)"
        ]
    }
];

const ALT_LINE = "💡 Или просто выбери 1 простую вещь из списка — даже это уже шаг!";

// --- Привычки дня ---
const HABITS = [
    // 🧠 Для ума и концентрации
    "Читать 10 страниц в день",
    "Учить одно новое слово",
    "Записывать мысли утром",
    "Вести дневник вечером",
    "Делать 5-минутную медитацию",
    "Планировать день с утра",
    "Делать 'мозговую разгрузку' на бумаге",
    "Использовать таймер Помидора (25/5)",
    "Не начинать день с телефона",
    "Слушать подкасты по интересной теме",
    "Запоминать 1 факт в день",
    "Убирать лишнее с рабочего стола",
    "Писать список задач на день",
    "Делать паузы каждые 50 минут",
    "Изучать основы нового языка",
    "Считать до 10 перед реакцией",
    "Писать 3 благодарности в день",
    "Делать обзор дня вечером",
    "Не прерывать других при разговоре",
    "Оставлять телефон в другой комнате при работе",

    // 💪 Для тела
    "Утренняя зарядка (5 минут)",
    "Растяжка после сна",
    "Прогулка 30 минут",
    "Пить 1 стакан воды после пробуждения",
    "Спать не менее 7 часов",
    "Ограничить сахар",
    "Не есть за 2 часа до сна",
    "Принимать душ с контрастом",
    "Разминка перед работой за ПК",
    "Есть овощи каждый день",
    "Делать короткую тренировку дома",
    "Танцевать под музыку 1 песню",
    "Использовать лестницу вместо лифта",
    "Не есть в телефоне",
    "Делать перерывы на движение",
    "Пить воду вместо сладких напитков",
    "Чистить язык утром",
    "Мыть руки перед едой",
    "Следить за осанкой",
    "Делать дыхательные упражнения",

    // 📱 Для цифровой гигиены
    "Не брать телефон первым делом с утра",
    "Отключить ненужные уведомления",
    "Делать цифровой детокс вечером",
    "Убрать соцсети с главного экрана",
    "Установить лимит на экранное время",
    "Проверять почту только в определённое время",
    "Чистить галерею от мусора",
    "Удалять ненужные приложения",
    "Перенести фото в облако",
    "Не скроллить перед сном",

    // 💬 Для общения и уверенности
    "Говорить 'спасибо' осознанно",
    "Слушать без перебиваний",
    "Делать 1 комплимент в день",
    "Спрашивать 'как ты?' и слушать ответ",
    "Поддерживать зрительный контакт",
    "Не жаловаться весь день",
    "Писать/звонить другу 1 раз в неделю",
    "Отвечать не сразу, а после паузы",
    "Улыбаться при общении",
    "Хвалить себя вслух",

    // 🧘 Для психики и спокойствия
    "Сканировать тело на напряжение",
    "Вести дневник эмоций",
    "Дышать 4–7–8 (вдох–удержание–выдох)",
    "Делать 'паузу осознанности'",
    "Записывать, за что благодарен",
    "Делать 1 'ничего не делать' минуту",
    "Слушать расслабляющую музыку",
    "Писать, что тебя злит (вместо срыва)",
    "Сортировать эмоции по ощущениям",
    "Ходить босиком дома",

    // ✍️ Для самопознания
    "Писать утренние страницы",
    "Отвечать себе на вопрос 'как я?'",
    "Писать 1 инсайт в день",
    "Рефлексировать, почему это вызвало эмоцию",
    "Делать ревизию целей",
    "Анализировать, откуда пришла тревога",
    "Писать, что сделал хорошо",
    "Писать письма 'неотправленные'",
    "Вспоминать, за что себя уважаешь",
    "Придумывать новый вопрос к себе",

    // 💡 Для продуктивности и порядка
    "Убирать рабочее место в конце дня",
    "Делать 3 важные задачи до обеда",
    "Проверять, не отвлекаешься ли",
    "Составлять список 'не делать'",
    "Планировать 1 день в неделю вперёд",
    "Делегировать 1 мелкую задачу",
    "Заканчивать начатое",
    "Устанавливать дедлайн даже для мелочей",
    "Писать мини-отчёт дня",
    "Записывать идеи в одном месте",

    // 🏠 Для быта и минимализма
    "Убирать 5 вещей в день",
    "Раз в неделю выбрасывать ненужное",
    "Мыть посуду сразу",
    "Готовить еду заранее",
    "Делать ревизию одежды",
    "Выключать свет, выходя из комнаты",
    "Проветривать комнату",
    "Протирать пыль ежедневно",
    "Раз в неделю расхламлять телефон",
    "Ставить вещи на свои места",

    // 🧑‍🎨 Творческие привычки
    "Делать 1 фото в день",
    "Вести идеи для творчества",
    "Рисовать 5 минут от руки",
    "Писать стихи или строчки",
    "Играть на инструменте",
    "Петь вслух",
    "Танцевать под музыку",
    "Составлять коллаж настроения",
    "Смотреть вдохновляющее видео",
    "Делать свой маленький проект",

    // 💬 45 привычек для уверенности в себе
    "Говорить чётко и не извиняться без причины",
    "Прямо просить то, что нужно",
    "Проговаривать свою ценность вслух",
    "Ходить с ровной осанкой",
    "Говорить чуть медленнее",
    "Слушать, не перебивая",
    "Делать комплимент другому — ежедневно",
    "Сначала думать, потом отвечать",
    "Не оправдываться, если не виноват",
    "Ставить границы словами: «Мне не ок»",
    "Отстаивать свою точку зрения спокойно",
    "Делать то, что откладывал",
    "Пробовать новое на людях (одежда, речь)",
    "Выходить из дома с мыслью: «я норм»",
    "Сохранять контакт глазами хотя бы 3 сек",
    "Не говорить о себе плохо даже в шутку",
    "Записывать свои маленькие победы",
    "Раз в день говорить твёрдое «нет»",
    "Не оправдывать чувства: «я имею право»",
    "Заменить «я стесняюсь» на «я пробую»",
    "Писать, что получилось за день",
    "Вести список своих качеств",
    "Отвечать комплиментом на комплимент",
    "Просить обратную связь",
    "Разговаривать с незнакомцем (даже в чате)",
    "Выходить из дома без маски/фильтров",
    "Пробовать говорить на камеру",
    "Отмечать, когда удалось сказать «своё»",
    "Хвалить себя за каждую попытку",
    "Вести дневник «уверенного себя»",
    "Представлять, как ты идёшь уверенно",
    "Заменять «а вдруг» на «а если получится»",
    "Работать над голосом (упражнения дикции)",
    "Вести публичные заметки/истории",
    "Писать посты от первого лица",
    "Выступать в голосовых чатах",
    "Слушать себя на записи — и не критиковать",
    "Задавать вопросы в группах",
    "Искать, где ты уже был смелым",
    "Сравнивать себя только с собой",
    "Не быть удобным всем",
    "Начинать фразы не с «извини», а с сути",
    "Называть себя по имени с уважением",
    "Отражать критику фразой: «а по сути?»",
    "Помнить: неуверенность — это навык, а не диагноз",

    // 🎥 45 привычек для развития YouTube / TikTok
    "Снимать короткое видео каждый день",
    "Вести заметки идей (темы, образы, фразы)",
    "Делать 1 пост в день, даже без идеала",
    "Проверять тренды раз в день (TikTok, YouTube Shorts)",
    "Писать сценарий на 3 строчки",
    "Ставить таймер на съёмку — и начинать",
    "Не переснимать больше 3 раз",
    "Делать автопубликацию на YouTube Shorts",
    "Следить за временем удержания (до 10 сек)",
    "Использовать субтитры",
    "Читать комментарии других — как идеи",
    "Придумывать 1 заголовок каждый день",
    "Смотреть, какие ролики взлетают у других",
    "Анализировать, почему не зашло (без драмы)",
    "Раз в неделю снимать ролик «без фильтров»",
    "Говорить с аудиторией, как с другом",
    "Отвечать подписчикам в комментах",
    "Делать сторис и закулисье",
    "Вести рубрику или серию",
    "Сохранять удачные кадры/моменты",
    "Репостить старые ролики",
    "Вести «контент-день» раз в неделю",
    "Смотреть своё видео и делать заметки",
    "Делать видео по формуле: зацепка–история–вывод",
    "Снимать на свету (естественный — лучше)",
    "Создать себе шаблон: интро, стиль, шрифт",
    "Изучать аналитику раз в неделю",
    "Планировать съёмку заранее",
    "Делать превью за 5 минут",
    "Перепаковывать старые идеи в новый стиль",
    "Спрашивать в конце видео: «А у тебя было так?»",
    "Добавлять к видео вызов/челлендж",
    "Пробовать разные форматы: говорящая голова, влог, сторителлинг",
    "Использовать популярную музыку (грамотно)",
    "Не ждать вдохновения — делать на дисциплине",
    "Разделять: процесс (для себя), результат (для роста)",
    "Снимать под настроение — и потом выкладывать",
    "Делать коллаборации с другими",
    "Сохранять первые 100 видео как тренировку",
    "Не удалять старые видео — видеть рост",
    "Ставить себе «вызов 30 дней видео»",
    "Визуализировать YouTube-канал мечты",
    "Делать монтаж минималистичным",
    "Не сравнивать себя с топами",
    "Помнить: смысл не в идеальности, а в контакте"
];

// --- Главное меню (ReplyKeyboard) ---
const mainMenu = Markup.keyboard([
    ['📋 Чек-лист', '📈 Прогресс'],
    ['📅 История', '💡 Мотивация'],
    ['🔥 Серия', '🏅 Достижения'],
    ['🇬🇧 Английский', '💡 Привычка дня'],
    ['♻️ Сбросить', 'ℹ️ Помощь']
]).resize();

// --- Вспомогательные функции ---
function getTodayKey() {
    return dayjs().format('YYYY-MM-DD');
}
function getWeekKey() {
    return dayjs().format('YYYY-[W]WW');
}
function getMonthKey() {
    return dayjs().format('YYYY-MM');
}
function getWeekdayIndex() {
    let idx = dayjs().day();
    return idx === 0 ? 6 : idx - 1;
}
function getChecklistText(idx) {
    const day = WEEKLY_CHECKLIST[idx];
    let text = `✅ ${day.title}\n`;
    day.tasks.forEach((t, i) => text += `• ${t}\n`);
    text += ALT_LINE;
    return text;
}
function getChecklistButtons(userId, idx) {
    const todayKey = getTodayKey();
    const user = db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [], habitsSent: [] };
    user.progress[todayKey] ||= Array(WEEKLY_CHECKLIST[idx].tasks.length).fill(false);
    return Markup.inlineKeyboard(
        WEEKLY_CHECKLIST[idx].tasks.map((t, i) => [
            Markup.button.callback(
                (user.progress[todayKey][i] ? '✅' : '⬜') + ' ' + (i + 1),
                `done_${i}`
            ),
            Markup.button.callback('🔁 Пропустить', `skip_${i}`)
        ])
    );
}
function getChecklistStatus(userId, idx) {
    const todayKey = getTodayKey();
    const user = db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [], habitsSent: [] };
    user.progress[todayKey] ||= Array(WEEKLY_CHECKLIST[idx].tasks.length).fill(false);
    const done = user.progress[todayKey].filter(Boolean).length;
    const total = WEEKLY_CHECKLIST[idx].tasks.length;
    const percent = Math.round(done / total * 100);
    return `Выполнено: ${done} из ${total} (${percent}%)`;
}
function getProgressText(userId) {
    const user = db.data.users[userId] || { progress: {}, streak: 0, words: [], medals: [] };
    let week = {};
    Object.keys(user.progress).forEach(date => {
        if (date.match(/^\d{4}-\d{2}-\d{2}$/)) {
            const w = dayjs(date).format('YYYY-[W]WW');
            week[w] ||= [];
            week[w].push(user.progress[date]);
        }
    });
    const thisWeek = week[getWeekKey()] || [];
    let daysDone = 0, daysPartial = 0, totalTasks = 0, totalDone = 0;
    thisWeek.forEach(day => {
        const done = day.filter(Boolean).length;
        totalTasks += day.length;
        totalDone += done;
        if (done === day.length) daysDone++;
        else if (done > 0) daysPartial++;
    });
    let percent = totalTasks ? Math.round(totalDone / totalTasks * 100) : 0;
    return `📊 Прогресс за неделю:\nДней полностью: ${daysDone}\nДней частично: ${daysPartial}\nВыполнено задач: ${totalDone} из ${totalTasks} (${percent}%)`;
}
function calculateStreak(userId) {
    const user = db.data.users[userId] || { progress: {}, streak: 0, words: [], medals: [] };
    const dates = Object.keys(user.progress)
        .filter(date => date.match(/^\d{4}-\d{2}-\d{2}$/))
        .sort((a, b) => dayjs(b).diff(dayjs(a)));
    let streak = 0;
    let prev = null;
    for (const date of dates) {
        const done = user.progress[date];
        const total = done.length;
        const completed = done.filter(Boolean).length;
        if (total === 0 || completed / total < 0.8) break;
        if (prev && dayjs(prev).diff(dayjs(date), 'day') !== 1) break;
        streak++;
        prev = date;
    }
    return streak;
}
function getMonthProgress(userId) {
    const user = db.data.users[userId] || { progress: {}, streak: 0, words: [], medals: [] };
    const monthKey = getMonthKey();
    let days = 0, full = 0, partial = 0;
    Object.keys(user.progress).forEach(date => {
        if (date.startsWith(monthKey)) {
            days++;
            const arr = user.progress[date];
            const done = arr.filter(Boolean).length;
            if (done === arr.length) full++;
            else if (done > 0) partial++;
        }
    });
    return `📅 За месяц: дней с прогрессом — ${days}, полностью выполнено — ${full}, частично — ${partial}`;
}

// --- Мотивация ---
let quotesQueue = [];
function shuffleQuotes() {
    quotesQueue = MOTIVATION_QUOTES
        .map(q => ({ q, sort: Math.random() }))
        .sort((a, b) => a.sort - b.sort)
        .map(({ q }) => q);
}
function getNextQuote() {
    if (quotesQueue.length === 0) shuffleQuotes();
    return quotesQueue.pop();
}

// --- Английские слова ---
const ENGLISH_WORDS = [
    { word: "ability", translate: "способность", example: "" },
    { word: "able", translate: "способный", example: "" },
    { word: "about", translate: "о; около", example: "" },
    { word: "above", translate: "над; выше", example: "" },
    { word: "accept", translate: "принимать", example: "" },
    { word: "accident", translate: "несчастный случай; авария", example: "" },
    { word: "according", translate: "согласно", example: "" },
    { word: "account", translate: "счёт; аккаунт", example: "" },
    { word: "across", translate: "через; поперёк", example: "" },
    { word: "act", translate: "действовать; поступок", example: "" },
    { word: "action", translate: "действие", example: "" },
    { word: "activity", translate: "деятельность; активность", example: "" },
    { word: "actor", translate: "актёр", example: "" },
    { word: "actually", translate: "на самом деле", example: "" },
    { word: "add", translate: "добавлять", example: "" },
    { word: "address", translate: "адрес", example: "" },
    { word: "adult", translate: "взрослый", example: "" },
    { word: "advice", translate: "совет", example: "" },
    { word: "affect", translate: "влиять", example: "" },
    { word: "after", translate: "после", example: "" },
    { word: "again", translate: "снова", example: "" },
    { word: "against", translate: "против", example: "" },
    { word: "age", translate: "возраст", example: "" },
    { word: "agency", translate: "агентство", example: "" },
    { word: "agent", translate: "агент", example: "" },
    { word: "ago", translate: "назад (по времени)", example: "" },
    { word: "agree", translate: "соглашаться", example: "" },
    { word: "agreement", translate: "соглашение", example: "" },
    { word: "air", translate: "воздух", example: "" },
    { word: "airplane", translate: "самолёт", example: "" },
    { word: "airport", translate: "аэропорт", example: "" },
    { word: "all", translate: "все; всё", example: "" },
    { word: "allow", translate: "разрешать; позволять", example: "" },
    { word: "almost", translate: "почти", example: "" },
    { word: "alone", translate: "один; в одиночестве", example: "" },
    { word: "along", translate: "вдоль", example: "" },
    { word: "already", translate: "уже", example: "" },
    { word: "also", translate: "также", example: "" },
    { word: "although", translate: "хотя", example: "" },
    { word: "always", translate: "всегда", example: "" },
    { word: "amazing", translate: "удивительный", example: "" },
    { word: "among", translate: "среди", example: "" },
    { word: "amount", translate: "количество; сумма", example: "" },
    { word: "analysis", translate: "анализ", example: "" },
    { word: "animal", translate: "животное", example: "" },
    { word: "another", translate: "другой; ещё один", example: "" },
    { word: "answer", translate: "ответ", example: "" },
    { word: "any", translate: "любой; какой-либо", example: "" },
    { word: "anyone", translate: "кто-нибудь; кто-либо", example: "" },
    { word: "anything", translate: "что-нибудь; что-либо", example: "" },
    { word: "anyway", translate: "в любом случае", example: "" },
    { word: "appear", translate: "появляться", example: "" },
    { word: "apple", translate: "яблоко", example: "" },
    { word: "apply", translate: "применять; подавать заявление", example: "" },
    { word: "area", translate: "область; район; площадь", example: "" },
    { word: "argue", translate: "спорить; аргументировать", example: "" },
    { word: "argument", translate: "аргумент; спор", example: "" },
    { word: "arm", translate: "рука (от плеча до кисти)", example: "" },
    { word: "army", translate: "армия", example: "" },
    { word: "around", translate: "вокруг; около", example: "" },
    { word: "arrive", translate: "прибывать; приезжать", example: "" },
    { word: "art", translate: "искусство", example: "" },
    { word: "article", translate: "статья", example: "" },
    { word: "artist", translate: "художник; артист", example: "" },
    { word: "as", translate: "как; в качестве", example: "" },
    { word: "ask", translate: "спрашивать; просить", example: "" },
    { word: "assume", translate: "предполагать", example: "" },
    { word: "at", translate: "в; на (указывает место/время)", example: "" },
    { word: "attack", translate: "атака; атаковать", example: "" },
    { word: "attempt", translate: "попытка; пытаться", example: "" },
    { word: "attention", translate: "внимание", example: "" },
    { word: "attitude", translate: "отношение; позиция", example: "" },
    { word: "author", translate: "автор", example: "" },
    { word: "available", translate: "доступный", example: "" },
    { word: "avoid", translate: "избегать", example: "" },
    { word: "away", translate: "прочь; вдали", example: "" },
    { word: "baby", translate: "младенец; ребёнок", example: "" },
    { word: "back", translate: "назад; спина", example: "" },
    { word: "bad", translate: "плохой", example: "" },
    { word: "bag", translate: "сумка", example: "" },
    { word: "ball", translate: "мяч", example: "" },
    { word: "bank", translate: "банк", example: "" },
    { word: "bar", translate: "бар; полоса; брусок", example: "" },
    { word: "base", translate: "основа; база", example: "" },
    { word: "basic", translate: "базовый; основной", example: "" },
    { word: "basket", translate: "корзина", example: "" },
    { word: "be", translate: "быть", example: "" },
    { word: "beautiful", translate: "красивый", example: "" },
    { word: "because", translate: "потому что", example: "" },
    { word: "become", translate: "становиться", example: "" },
    { word: "bed", translate: "кровать", example: "" },
    { word: "before", translate: "до; перед", example: "" },
    { word: "begin", translate: "начинать", example: "" },
    { word: "behavior", translate: "поведение", example: "" },
    { word: "behind", translate: "за; позади", example: "" },
    { word: "believe", translate: "верить", example: "" },
    { word: "below", translate: "ниже; под", example: "" },
    { word: "benefit", translate: "выгода; польза", example: "" },
    { word: "best", translate: "лучший", example: "" },
    { word: "better", translate: "лучше", example: "" },
    { word: "between", translate: "между", example: "" },
    { word: "beyond", translate: "за пределами", example: "" },
    { word: "big", translate: "большой", example: "" },
    { word: "bill", translate: "счёт (на оплату); банкнота", example: "" },
    { word: "bird", translate: "птица", example: "" },
    { word: "bit", translate: "немного; кусочек", example: "" },
    { word: "black", translate: "чёрный", example: "" },
    { word: "blood", translate: "кровь", example: "" },
    { word: "blue", translate: "синий; голубой", example: "" },
    { word: "board", translate: "доска; совет (директоров)", example: "" },
    { word: "body", translate: "тело", example: "" },
    { word: "book", translate: "книга", example: "" },
    { word: "both", translate: "оба", example: "" },
    { word: "box", translate: "коробка", example: "" },
    { word: "boy", translate: "мальчик", example: "" },
    { word: "break", translate: "ломать; перерыв", example: "" },
    { word: "bring", translate: "приносить", example: "" },
    { word: "brother", translate: "брат", example: "" },
    { word: "budget", translate: "бюджет", example: "" },
    { word: "build", translate: "строить", example: "" },
    { word: "building", translate: "здание", example: "" },
    { word: "burn", translate: "жечь; гореть", example: "" },
    { word: "business", translate: "бизнес; дело", example: "" },
    { word: "busy", translate: "занятый", example: "" },
    { word: "but", translate: "но", example: "" },
    { word: "buy", translate: "покупать", example: "" },
    { word: "by", translate: "у; около; посредством", example: "" },
    { word: "call", translate: "звать; звонить", example: "" },
    { word: "camera", translate: "камера", example: "" },
    { word: "campaign", translate: "кампания", example: "" },
    { word: "can", translate: "мочь; уметь", example: "" },
    { word: "cancer", translate: "рак (болезнь)", example: "" },
    { word: "capital", translate: "столица; капитал", example: "" },
    { word: "car", translate: "машина; автомобиль", example: "" },
    { word: "card", translate: "карта; карточка", example: "" },
    { word: "care", translate: "забота; заботиться", example: "" },
    { word: "career", translate: "карьера", example: "" },
    { word: "carry", translate: "нести; перевозить", example: "" },
    { word: "case", translate: "случай; дело", example: "" },
    { word: "cat", translate: "кошка", example: "" },
    { word: "catch", translate: "ловить; поймать", example: "" },
    { word: "cause", translate: "причина; вызывать", example: "" },
    { word: "cell", translate: "клетка; ячейка", example: "" },
    { word: "center", translate: "центр", example: "" },
    { word: "century", translate: "век; столетие", example: "" },
    { word: "certain", translate: "определённый; уверенный", example: "" },
    { word: "chair", translate: "стул; кресло", example: "" },
    { word: "chance", translate: "шанс; возможность", example: "" },
    { word: "change", translate: "менять; изменение", example: "" },
    { word: "character", translate: "персонаж; характер", example: "" },
    { word: "charge", translate: "плата; заряд; обвинять", example: "" },
    { word: "check", translate: "проверять; чек", example: "" },
    { word: "child", translate: "ребёнок", example: "" },
    { word: "choice", translate: "выбор", example: "" },
    { word: "choose", translate: "выбирать", example: "" },
    { word: "church", translate: "церковь", example: "" },
    { word: "city", translate: "город", example: "" },
    { word: "class", translate: "класс; урок", example: "" },
    { word: "clean", translate: "чистый; чистить", example: "" },
    { word: "clear", translate: "ясно; чистый", example: "" },
    { word: "climb", translate: "взбираться; подниматься", example: "" },
    { word: "clock", translate: "часы (настенные/настольные)", example: "" },
    { word: "close", translate: "закрывать; близко", example: "" },
    { word: "clothes", translate: "одежда", example: "" },
    { word: "cloud", translate: "облако", example: "" },
    { word: "club", translate: "клуб", example: "" },
    { word: "cold", translate: "холодный; простуда", example: "" },
    { word: "college", translate: "колледж; вуз", example: "" },
    { word: "color", translate: "цвет", example: "" },
    { word: "come", translate: "приходить", example: "" },
    { word: "common", translate: "общий; распространённый", example: "" },
    { word: "company", translate: "компания; фирма", example: "" },
    { word: "compare", translate: "сравнивать", example: "" },
    { word: "computer", translate: "компьютер", example: "" },
    { word: "concern", translate: "беспокойство; забота", example: "" },
    { word: "condition", translate: "состояние; условие", example: "" },
    { word: "conference", translate: "конференция", example: "" },
    { word: "connect", translate: "соединять; связывать", example: "" },
    { word: "consider", translate: "рассматривать; считать", example: "" },
    { word: "continue", translate: "продолжать", example: "" },
    { word: "control", translate: "контроль; управлять", example: "" },
    { word: "cook", translate: "готовить (еду); повар", example: "" },
    { word: "cool", translate: "крутой; прохладный", example: "" },
    { word: "copy", translate: "копировать; копия", example: "" },
    { word: "corner", translate: "угол", example: "" },
    { word: "correct", translate: "правильный; исправлять", example: "" },
    { word: "cost", translate: "стоимость; стоить", example: "" },
    { word: "could", translate: "мог бы", example: "" },
    { word: "country", translate: "страна", example: "" },
    { word: "couple", translate: "пара", example: "" },
    { word: "course", translate: "курс; направление", example: "" },
    { word: "court", translate: "суд; корт", example: "" },
    { word: "cover", translate: "покрывать; обложка", example: "" },
    { word: "create", translate: "создавать", example: "" },
    { word: "crime", translate: "преступление", example: "" },
    { word: "culture", translate: "культура", example: "" },
    { word: "cup", translate: "чашка", example: "" },
    { word: "customer", translate: "клиент; покупатель", example: "" },
    { word: "cut", translate: "резать; разрез", example: "" },
    { word: "dark", translate: "тёмный", example: "" },
    { word: "data", translate: "данные", example: "" },
    { word: "daughter", translate: "дочь", example: "" },
    { word: "day", translate: "день", example: "" },
    { word: "dead", translate: "мёртвый", example: "" },
    { word: "deal", translate: "иметь дело; сделка", example: "" },
    { word: "death", translate: "смерть", example: "" },
    { word: "decide", translate: "решать; принимать решение", example: "" },
    { word: "decision", translate: "решение", example: "" },
    { word: "deep", translate: "глубокий", example: "" },
    { word: "degree", translate: "степень; градус; диплом", example: "" },
    { word: "deliver", translate: "доставлять", example: "" },
    { word: "demand", translate: "спрос; требовать", example: "" },
    { word: "department", translate: "отдел; департамент", example: "" },
    { word: "describe", translate: "описывать", example: "" },
    { word: "design", translate: "дизайн; проектировать", example: "" },
    { word: "detail", translate: "деталь; подробность", example: "" },
    { word: "develop", translate: "развивать; разрабатывать", example: "" },
    { word: "device", translate: "устройство; прибор", example: "" },
    { word: "die", translate: "умирать", example: "" },
    { word: "difference", translate: "разница; отличие", example: "" },
    { word: "different", translate: "разный; другой", example: "" },
    { word: "difficult", translate: "трудный; сложный", example: "" },
    { word: "direction", translate: "направление", example: "" },
    { word: "director", translate: "директор; режиссёр", example: "" },
    { word: "discover", translate: "обнаруживать; открывать", example: "" },
    { word: "discuss", translate: "обсуждать", example: "" },
    { word: "disease", translate: "болезнь", example: "" },
    { word: "do", translate: "делать", example: "" },
    { word: "doctor", translate: "врач; доктор", example: "" },
    { word: "dog", translate: "собака", example: "" },
    { word: "door", translate: "дверь", example: "" },
    { word: "down", translate: "вниз", example: "" },
    { word: "draw", translate: "рисовать; тянуть", example: "" },
    { word: "dream", translate: "мечта; сон; мечтать", example: "" },
    { word: "drive", translate: "водить; ехать", example: "" },
    { word: "drop", translate: "ронять; капля", example: "" },
    { word: "drug", translate: "лекарство; наркотик", example: "" },
    { word: "during", translate: "во время", example: "" },
    { word: "each", translate: "каждый", example: "" },
    { word: "early", translate: "ранний; рано", example: "" },
    { word: "earth", translate: "Земля; земля", example: "" },
    { word: "east", translate: "восток", example: "" },
    { word: "easy", translate: "лёгкий; просто", example: "" },
    { word: "eat", translate: "есть; кушать", example: "" },
    { word: "education", translate: "образование", example: "" },
    { word: "effect", translate: "эффект; влияние", example: "" },
    { word: "effort", translate: "усилие", example: "" },
    { word: "eight", translate: "восемь", example: "" },
    { word: "either", translate: "любой из двух; также", example: "" },
    { word: "election", translate: "выборы", example: "" },
    { word: "else", translate: "ещё; другой", example: "" },
    { word: "employee", translate: "сотрудник; работник", example: "" },
    { word: "end", translate: "конец; заканчивать", example: "" },
    { word: "energy", translate: "энергия", example: "" },
    { word: "enjoy", translate: "наслаждаться", example: "" },
    { word: "enough", translate: "достаточно", example: "" },
    { word: "enter", translate: "входить; поступать", example: "" },
    { word: "entire", translate: "весь; целый", example: "" },
    { word: "environment", translate: "окружающая среда; обстановка", example: "" },
    { word: "especially", translate: "особенно", example: "" },
    { word: "establish", translate: "устанавливать; учреждать", example: "" },
    { word: "even", translate: "даже; ровный", example: "" },
    { word: "evening", translate: "вечер", example: "" },
    { word: "event", translate: "событие", example: "" },
    { word: "ever", translate: "когда-либо", example: "" },
    { word: "every", translate: "каждый", example: "" },
    { word: "everyone", translate: "все; каждый", example: "" },
    { word: "everything", translate: "всё", example: "" },
    { word: "evidence", translate: "доказательство; свидетельство", example: "" },
    { word: "exactly", translate: "точно", example: "" },
    { word: "example", translate: "пример", example: "" },
    { word: "expect", translate: "ожидать", example: "" },
    { word: "experience", translate: "опыт", example: "" },
    { word: "explain", translate: "объяснять", example: "" },
    { word: "eye", translate: "глаз", example: "" },
    { word: "face", translate: "лицо; сталкиваться", example: "" },
    { word: "fact", translate: "факт", example: "" },
    { word: "fail", translate: "терпеть неудачу; провал", example: "" },
    { word: "fall", translate: "падать; осень (амер.)", example: "" },
    { word: "family", translate: "семья", example: "" },
    { word: "famous", translate: "знаменитый", example: "" },
    { word: "far", translate: "далеко", example: "" },
    { word: "fast", translate: "быстро; быстрый", example: "" },
    { word: "father", translate: "отец", example: "" },
    { word: "fear", translate: "страх; бояться", example: "" },
    { word: "feel", translate: "чувствовать", example: "" },
    { word: "feeling", translate: "чувство; ощущение", example: "" },
    { word: "few", translate: "мало; несколько", example: "" },
    { word: "field", translate: "поле; область", example: "" },
    { word: "fight", translate: "бороться; драка", example: "" },
    { word: "figure", translate: "фигура; число; понимать", example: "" },
    { word: "fill", translate: "заполнять", example: "" },
    { word: "film", translate: "фильм; снимать", example: "" },
    { word: "final", translate: "финальный; окончательный", example: "" },
    { word: "finally", translate: "наконец", example: "" },
    { word: "find", translate: "находить", example: "" },
    { word: "fine", translate: "хороший; штраф", example: "" },
    { word: "finger", translate: "палец (на руке)", example: "" },
    { word: "finish", translate: "заканчивать", example: "" },
    { word: "fire", translate: "огонь; увольнять", example: "" },
    { word: "first", translate: "первый", example: "" },
    { word: "fish", translate: "рыба; ловить рыбу", example: "" },
    { word: "five", translate: "пять", example: "" },
    { word: "floor", translate: "пол; этаж", example: "" },
    { word: "fly", translate: "летать; муха", example: "" },
    { word: "focus", translate: "фокус; сосредотачиваться", example: "" },
    { word: "follow", translate: "следовать; следить", example: "" },
    { word: "food", translate: "еда", example: "" },
    { word: "foot", translate: "ступня; фут", example: "" },
    { word: "for", translate: "для; за", example: "" },
    { word: "force", translate: "сила; заставлять", example: "" },
    { word: "forget", translate: "забывать", example: "" },
    { word: "form", translate: "форма; формировать", example: "" },
    { word: "free", translate: "свободный; бесплатно", example: "" },
    { word: "friend", translate: "друг", example: "" },
    { word: "from", translate: "от; из", example: "" },
    { word: "front", translate: "перед; фронт", example: "" },
    { word: "full", translate: "полный", example: "" },
    { word: "fun", translate: "веселье; весёлый", example: "" },
    { word: "function", translate: "функция; функционировать", example: "" },
    { word: "fund", translate: "фонд; финансировать", example: "" },
    { word: "future", translate: "будущее", example: "" },
    { word: "game", translate: "игра", example: "" },
    { word: "garden", translate: "сад", example: "" },
    { word: "gas", translate: "газ; бензин (амер.)", example: "" },
    { word: "general", translate: "общий; генерал", example: "" },
    { word: "generation", translate: "поколение", example: "" },
    { word: "get", translate: "получать; становиться", example: "" },
    { word: "girl", translate: "девушка; девочка", example: "" },
    { word: "give", translate: "давать", example: "" },
    { word: "glass", translate: "стекло; стакан", example: "" },
    { word: "go", translate: "идти; ехать", example: "" },
    { word: "goal", translate: "цель; гол", example: "" },
    { word: "good", translate: "хороший; добро", example: "" },
    { word: "government", translate: "правительство", example: "" },
    { word: "great", translate: "великий; отличный", example: "" },
    { word: "green", translate: "зелёный", example: "" },
    { word: "group", translate: "группа", example: "" },
    { word: "grow", translate: "расти; выращивать", example: "" },
    { word: "growth", translate: "рост; развитие", example: "" },
    { word: "guess", translate: "догадываться; предполагать", example: "" },
    { word: "gun", translate: "оружие; пистолет", example: "" },
    { word: "guy", translate: "парень; человек", example: "" },
    { word: "hair", translate: "волосы", example: "" },
    { word: "half", translate: "половина", example: "" },
    { word: "hand", translate: "рука (кисть)", example: "" },
    { word: "hang", translate: "вешать; висеть", example: "" },
    { word: "happen", translate: "происходить; случаться", example: "" },
    { word: "happy", translate: "счастливый", example: "" },
    { word: "hard", translate: "трудный; жёсткий", example: "" },
    { word: "have", translate: "иметь", example: "" },
    { word: "he", translate: "он", example: "" },
    { word: "head", translate: "голова; руководить", example: "" },
    { word: "health", translate: "здоровье", example: "" },
    { word: "hear", translate: "слышать", example: "" },
    { word: "heart", translate: "сердце", example: "" },
    { word: "help", translate: "помогать; помощь", example: "" },
    { word: "here", translate: "здесь", example: "" },
    { word: "high", translate: "высокий", example: "" }
];
function getRandomWord(words) {
    return words[Math.floor(Math.random() * words.length)];
}

// --- Достижения ---
function checkMedals(userId) {
    const user = db.data.users[userId];
    user.medals ||= [];
    // За первую неделю streak
    if (user.streak >= 7 && !user.medals.includes('7days')) {
        user.medals.push('7days');
    }
    // За 30 дней streak
    if (user.streak >= 30 && !user.medals.includes('30days')) {
        user.medals.push('30days');
    }
    // За первую задачу
    const anyDone = Object.values(user.progress).some(arr => arr.some(Boolean));
    if (anyDone && !user.medals.includes('firsttask')) {
        user.medals.push('firsttask');
    }
}

// --- Инициализация бота ---
const bot = new Telegraf(BOT_TOKEN);

// --- Команды ---
bot.start(async ctx => {
    await initDB();
    await sendTodayChecklist(ctx, true);
});
bot.hears('📋 Чек-лист', async ctx => {
    await initDB();
    await sendTodayChecklist(ctx, false);
});
bot.hears('📈 Прогресс', async ctx => {
    await initDB();
    const text = getProgressText(ctx.from.id);
    await ctx.reply(text, mainMenu);
});
bot.hears('📅 История', async ctx => {
    await initDB();
    const text = getMonthProgress(ctx.from.id);
    await ctx.reply(text, mainMenu);
});
bot.hears('💡 Мотивация', async ctx => {
    const quote = getNextQuote();
    await ctx.reply(`💡 Мотивация:\n${quote}`, mainMenu);
});
bot.hears('🔥 Серия', async ctx => {
    await initDB();
    const user = db.data.users[ctx.from.id] || { progress: {}, streak: 0, words: [], medals: [] };
    const streak = user.streak || 0;
    if (streak > 1) {
        await ctx.reply(`🔥 Ваша серия: ${streak} дней подряд с выполнением чек-листа на 80% и более!`, mainMenu);
    } else if (streak === 1) {
        await ctx.reply('🔥 Серия только началась! Продолжайте выполнять чек-лист на 80% и более каждый день.', mainMenu);
    } else {
        await ctx.reply('Серия ещё не началась. Выполняйте чек-лист два дня подряд на 80% и больше!', mainMenu);
    }
});
bot.hears('🏅 Достижения', async ctx => {
    await initDB();
    const user = db.data.users[ctx.from.id] || { progress: {}, streak: 0, words: [], medals: [] };
    let text = '🏅 Ваши достижения:\n';
    if (user.medals?.length) {
        if (user.medals.includes('firsttask')) text += '• Первая выполненная задача\n';
        if (user.medals.includes('7days')) text += '• Серия 7 дней подряд\n';
        if (user.medals.includes('30days')) text += '• Серия 30 дней подряд\n';
    } else {
        text += 'Пока нет достижений. Всё впереди!';
    }
    await ctx.reply(text, mainMenu);
});
bot.hears('🇬🇧 Английский', async ctx => {
    await initDB();
    const user = db.data.users[ctx.from.id] || { progress: {}, streak: 0, words: [], medals: [] };
    const words = user.words?.length ? user.words : ENGLISH_WORDS;
    const word = getRandomWord(words);
    await ctx.reply(`🇬🇧 Слово дня: <b>${word.word}</b>\nПеревод: ${word.translate}\nПример: ${word.example || ''}`, { parse_mode: 'HTML' });
});
bot.hears('♻️ Сбросить', async ctx => {
    await ctx.reply(
        'Вы точно хотите удалить весь прогресс?',
        Markup.inlineKeyboard([
            [Markup.button.callback('✅ Да', 'reset_yes'), Markup.button.callback('❌ Нет', 'reset_no')]
        ])
    );
});
bot.hears('ℹ️ Помощь', async ctx => {
    await ctx.replyWithHTML(
`<b>ℹ️ Помощь по боту</b>

<b>Что умеет этот бот:</b>
• 📋 <b>Чек-лист дня</b> — персональные задачи на каждый день.
• 💡 <b>Мотивация</b> — цитаты для вдохновения.
• 🔥 <b>Серия</b> — сколько дней подряд вы выполняете чек-лист на 80% и больше.
• 📈 <b>Прогресс</b> — статистика за неделю.
• 📅 <b>История</b> — прогресс за месяц.
• 🏅 <b>Достижения</b> — медали за streak и активность.
• 💡 <b>Привычка дня</b> — каждый день новая полезная привычка.
• 🇬🇧 <b>Английский</b> — бот присылает 5 слов в день, можно добавлять свои слова через /addword слово - перевод.
• ♻️ <b>Сбросить</b> — удалить прогресс.
• ℹ️ <b>Помощь</b> — это сообщение.

<b>Добавить слово в словарь:</b>
/addword motivation - мотивация

<b>Посмотреть свой словарь:</b>
/mywords

<b>Вопросы? Пишите разработчику!</b>
`, mainMenu);
});

bot.command('addword', async ctx => {
    await initDB();
    const userId = ctx.from.id;
    const text = ctx.message.text.replace('/addword', '').trim();
    const [word, translate] = text.split('-').map(s => s.trim());
    if (!word || !translate) {
        return ctx.reply('Используйте: /addword слово - перевод');
    }
    db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [] };
    db.data.users[userId].words ||= [];
    db.data.users[userId].words.push({ word, translate, example: '' });
    await db.write();
    ctx.reply(`Слово "${word}" добавлено в ваш словарь!`);
});

bot.command('mywords', async ctx => {
    await initDB();
    const userId = ctx.from.id;
    const user = db.data.users[userId] || { words: [] };
    if (!user.words?.length) return ctx.reply('Ваш словарь пуст. Добавьте слово через /addword');
    let text = 'Ваш словарь:\n';
    user.words.forEach((w, i) => {
        text += `${i + 1}. ${w.word} — ${w.translate}\n`;
    });
    ctx.reply(text);
});

// --- Инлайн кнопки подтверждения сброса ---
bot.action('reset_yes', async ctx => {
    await initDB();
    db.data.users[ctx.from.id] = { progress: {}, streak: 0, words: [], medals: [] };
    await db.write();
    await ctx.editMessageText('Прогресс удалён! 👍');
    await ctx.reply('Выберите действие:', mainMenu);
    await ctx.answerCbQuery();
});
bot.action('reset_no', async ctx => {
    await ctx.editMessageText('Отмена удаления прогресса.');
    await ctx.reply('Выберите действие:', mainMenu);
    await ctx.answerCbQuery();
});

// --- Инлайн кнопки чек-листа ---
bot.on('callback_query', async ctx => {
    await initDB();
    const userId = ctx.from.id;
    const todayKey = getTodayKey();
    const idx = getWeekdayIndex();
    const user = db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [], habitsSent: [] };
    user.progress[todayKey] ||= Array(WEEKLY_CHECKLIST[idx].tasks.length).fill(false);

    const data = ctx.callbackQuery.data;
    if (data.startsWith('done_')) {
        const num = parseInt(data.split('_')[1]);
        user.progress[todayKey][num] = true;

        // Пересчитываем серию и достижения
        user.streak = calculateStreak(userId);
        checkMedals(userId);
        await db.write();

        await ctx.answerCbQuery('Отмечено!');
        try {
            await ctx.editMessageReplyMarkup(getChecklistButtons(userId, idx).reply_markup);
        } catch (e) {
            if (!e.message.includes('message is not modified')) throw e;
        }
        await ctx.reply(getChecklistStatus(userId, idx));
    } else if (data.startsWith('skip_')) {
        await ctx.answerCbQuery('Пропущено!');
        try {
            await ctx.editMessageReplyMarkup(getChecklistButtons(userId, idx).reply_markup);
        } catch (e) {
            if (!e.message.includes('message is not modified')) throw e;
        }
    }
});

// --- Отправка чеклиста ---
async function sendTodayChecklist(ctx, showMenu = true) {
    await initDB();
    const idx = getWeekdayIndex();
    const userId = ctx.from.id;
    const user = db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [], habitsSent: [] };
    const todayKey = getTodayKey();
    user.progress[todayKey] ||= Array(WEEKLY_CHECKLIST[idx].tasks.length).fill(false);

    const text = getChecklistText(idx);
    await ctx.reply(text, getChecklistButtons(userId, idx));
    await ctx.reply(getChecklistStatus(userId, idx));
    if (showMenu) await ctx.reply('Выберите действие:', mainMenu);
}

// --- Ежедневная рассылка чеклиста ---
schedule.scheduleJob('0 8 * * *', async () => {
    await initDB();
    const users = Object.keys(db.data.users);
    for (const userId of users) {
        const idx = getWeekdayIndex();
        const text = getChecklistText(idx);
        await bot.telegram.sendMessage(userId, text, getChecklistButtons(userId, idx));
        await bot.telegram.sendMessage(userId, getChecklistStatus(userId, idx));
        await bot.telegram.sendMessage(userId, 'Выберите действие:', mainMenu);
    }
});

// --- Почасовые напоминания ---
schedule.scheduleJob('0 9-23,0-1 * * *', async () => {
    await initDB();
    const users = Object.keys(db.data.users);
    const reminders = [
        "🕐 Уже час прошёл! Сделай хотя бы 1 шаг из чек-листа!",
        "🔔 Маленький шаг — тоже движение. Выполни хотя бы одно задание.",
        "⏳ Не забывай про свой чеклист — даже 1 пункт важен!",
        "💪 Ты можешь больше, чем думаешь. Сделай шаг сейчас!"
    ];
    for (const userId of users) {
        await bot.telegram.sendMessage(userId, reminders[Math.floor(Math.random() * reminders.length)]);
    }
});

// --- Ежедневная привычка дня ---
schedule.scheduleJob('0 7 * * *', async () => {
    await initDB();
    const users = Object.keys(db.data.users);
    const habit = HABITS[Math.floor(Math.random() * HABITS.length)];
    for (const userId of users) {
        await bot.telegram.sendMessage(userId, `💡 Привычка дня: ${habit}`);
    }
});

// --- Ежедневная рассылка английских слов (5 раз в день) ---
const WORD_TIMES = ['0 9 * * *', '0 12 * * *', '0 15 * * *', '0 18 * * *', '0 21 * * *'];
WORD_TIMES.forEach(cron => {
    schedule.scheduleJob(cron, async () => {
        await initDB();
        const users = Object.keys(db.data.users);
        for (const userId of users) {
            const user = db.data.users[userId];
            const words = user.words?.length ? user.words : ENGLISH_WORDS;
            const word = getRandomWord(words);
            await bot.telegram.sendMessage(
                userId,
                `🇬🇧 Слово дня: <b>${word.word}</b>\nПеревод: ${word.translate}\nПример: ${word.example || ''}`,
                { parse_mode: 'HTML' }
            );
        }
    });
});

// --- Еженедельный отчёт ---
schedule.scheduleJob('0 22 * * 0', async () => {
    await initDB();
    const users = Object.keys(db.data.users);
    for (const userId of users) {
        const text = getProgressText(userId);
        const quote = getNextQuote();
        let congrats = "Неделя завершена! 🎉";
        const streak = db.data.users[userId].streak || 0;
        if (streak >= 7) congrats += ` Вы держите серию ${streak} дней подряд!`;
        await bot.telegram.sendMessage(
            userId,
            `🌟 Итоги недели:\n${text}\n\n${congrats}\n\n💡 Мотивация: ${quote}`
        );
    }
});

const WEEKLY_QUESTIONS = [
    "Что было самым сложным на этой неделе?",
    "Что далось легко?",
    "Чему ты научился(ась)?"
];

schedule.scheduleJob('5 22 * * 0', async () => {
    const db = await connectDB();
    const users = await db.collection('users').find({}).toArray();
    for (const user of users) {
        for (const q of WEEKLY_QUESTIONS) {
            await bot.telegram.sendMessage(user.userId, `📝 ${q}`);
        }
    }
});

const CHALLENGES = [
    "Попробуй новый маршрут домой.",
    "Позвони другу.",
    "Напиши 3 благодарности.",
    "Сделай 10 приседаний.",
    "Проведи 10 минут без телефона.",
    "Сделай доброе дело незаметно.",
    "Прогуляйся на свежем воздухе.",
    "Сделай уборку на рабочем месте.",
    "Почитай 10 страниц книги.",
    "Сделай запись в дневнике.",
    // Челленджи для английского
    "Выучи и запиши 3 новых английских слова.",
    "Посмотри короткое видео на английском (например, TED-ролик или мультик) и выпиши 2-3 новых слова.",
    "Попробуй повторить вслух простую английскую фразу из YouTube или приложения.",
    "Составь 2 простых предложения на английском и запиши их.",
    "Слушай 5 минут английской песни и попробуй разобрать хотя бы одно слово.",
    "Поставь на заставку телефона слово или фразу на английском — пусть весь день будет перед глазами."
];

function getRandomChallenge() {
    return CHALLENGES[Math.floor(Math.random() * CHALLENGES.length)];
}

schedule.scheduleJob('2 8 * * *', async () => {
    const db = await connectDB();
    const users = await db.collection('users').find({}).toArray();
    for (const user of users) {
        const challenge = getRandomChallenge();
        await bot.telegram.sendMessage(
            user.userId,
            `🔥 Челлендж дня:\n${challenge}`,
            Markup.inlineKeyboard([
                Markup.button.callback('✅ Принять', `challenge_accept_${challenge}`),
                Markup.button.callback('❌ Отказаться', `challenge_decline`)
            ])
        );
    }
});

bot.action(/challenge_accept_(.+)/, async ctx => {
    await ctx.editMessageText(`Челлендж принят! Удачи! 💪`);
    await ctx.answerCbQuery();
});
bot.action('challenge_decline', async ctx => {
    await ctx.editMessageText('Вы отказались от челленжа на сегодня.');
    await ctx.answerCbQuery();
});

bot.launch();
console.log('Бот запущен!');

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

// Старая версия кода, которую нужно заменить:

async function sendHabitOfTheDay(ctx) {
    await initDB();
    const userId = ctx.from.id;
    const user = db.data.users[userId] ||= { progress: {}, streak: 0, words: [], medals: [], habitsSent: [] };
    user.habitsSent ||= [];
    // Найти неотправленные привычки
    const available = HABITS
        .map((habit, idx) => ({ habit, idx }))
        .filter(h => !user.habitsSent.includes(h.idx));
    if (available.length === 0) {
        user.habitsSent = [];
        await db.write();
        return ctx.reply('🎉 Вы попробовали все привычки! Список сброшен, начинаем заново. Нажмите ещё раз для новой привычки.');
    }
    const random = available[Math.floor(Math.random() * available.length)];
    user.habitsSent.push(random.idx);
    await db.write();
    await ctx.reply(`💡 Привычка дня:\n${random.habit}`);
}